basePath: /v1
definitions:
  v1.ReportResponse:
    properties:
      fileLink:
        example: http://localhost:8080/v1/reports/80ef1ba7-1045-41aa-a8a2-4c0aba407baf
        type: string
    type: object
  v1.Response:
    properties:
      data: {}
      error: {}
      message:
        type: string
      status_code:
        type: integer
    type: object
  v1.createSegmentRequest:
    properties:
      slug:
        example: AVITO_VOICE_MESSAGES
        type: string
    required:
    - slug
    type: object
  v1.createSegmentResponse:
    properties:
      id:
        example: 1
        type: integer
      slug:
        example: AVITO_VOICE_MESSAGES
        type: string
    required:
    - id
    - slug
    type: object
  v1.modifyUsersSegmentsRequest:
    properties:
      segments:
        example:
        - AVITO_VOICE_MESSAGES
        - AVITO_PERFORMANCE_VAS
        items:
          type: string
        type: array
    required:
    - segments
    type: object
  v1.registerUserRequest:
    properties:
      email:
        example: vadiminmail@gmail.com
        type: string
      lastName:
        example: Valov
        type: string
      name:
        example: Vadim
        type: string
    required:
    - email
    - lastName
    - name
    type: object
  v1.registerUserResponse:
    properties:
      email:
        example: vadiminmail@gmail.com
        type: string
      id:
        example: 1
        type: integer
      lastName:
        example: Valov
        type: string
      name:
        example: Vadim
        type: string
    required:
    - email
    - id
    - lastName
    - name
    type: object
  v1.segmentsResponse:
    properties:
      segments:
        example:
        - AVITO_VOICE_MESSAGES
        items:
          type: string
        type: array
    type: object
  v1.usersSegmentsResponse:
    properties:
      usersSegments:
        example:
        - AVITO_VOICE_MESSAGES
        - AVITO_PERFORMANCE_VAS
        items:
          type: string
        type: array
    type: object
host: localhost:8080
info:
  contact: {}
  description: Users segments
  title: Users segments service API
  version: "1.0"
paths:
  /reports/{reportID}:
    get:
      consumes:
      - application/json
      description: Download a report
      operationId: download
      parameters:
      - description: user ID
        example: 80ef1ba7-1045-41aa-a8a2-4c0aba407baf
        in: path
        name: reportID
        required: true
        type: string
      produces:
      - application/pdf
      responses:
        "200":
          description: OK
          schema:
            type: file
        "404":
          description: Not Found
          schema:
            type: file
      summary: Download
      tags:
      - report
  /segments:
    get:
      consumes:
      - application/json
      description: Returns all segments
      operationId: getSegments
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/v1.Response'
            - properties:
                data:
                  $ref: '#/definitions/v1.segmentsResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.Response'
      summary: Get
      tags:
      - segments
    post:
      consumes:
      - application/json
      description: Create a new segment
      operationId: create
      parameters:
      - description: Segment data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1.createSegmentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/v1.Response'
            - properties:
                data:
                  $ref: '#/definitions/v1.createSegmentResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.Response'
      summary: Create
      tags:
      - segments
  /segments/:segmentSlug:
    delete:
      consumes:
      - application/json
      description: Deletes segment and all users from it
      operationId: delete
      parameters:
      - description: segment ID
        example: "1"
        in: path
        name: segmentSlug
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.Response'
      summary: Delete
      tags:
      - segments
  /users:
    post:
      consumes:
      - application/json
      description: Register a new user
      operationId: register
      parameters:
      - description: User data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1.registerUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/v1.Response'
            - properties:
                data:
                  $ref: '#/definitions/v1.registerUserResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.Response'
      summary: Register
      tags:
      - users
  /users/:userID/segments:
    get:
      consumes:
      - application/json
      description: Returns all users segments
      operationId: getUsersSegments
      parameters:
      - description: user ID
        example: "1"
        in: path
        name: userID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/v1.Response'
            - properties:
                data:
                  $ref: '#/definitions/v1.usersSegmentsResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.Response'
      summary: Get users segments
      tags:
      - users
  /users/:userID/segments/add:
    post:
      consumes:
      - application/json
      description: Adds user to segments
      operationId: add
      parameters:
      - description: Segments to add
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1.modifyUsersSegmentsRequest'
      - description: user ID
        example: "1"
        in: path
        name: userID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/v1.Response'
            - properties:
                data:
                  $ref: '#/definitions/v1.usersSegmentsResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.Response'
      summary: Add to segments
      tags:
      - users
  /users/:userID/segments/delete:
    post:
      consumes:
      - application/json
      description: Deletes user from segment
      operationId: deleteFromSegment
      parameters:
      - description: Segments to delete
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1.modifyUsersSegmentsRequest'
      - description: user ID
        example: "1"
        in: path
        name: userID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/v1.Response'
            - properties:
                data:
                  $ref: '#/definitions/v1.usersSegmentsResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.Response'
      summary: Delete from segment
      tags:
      - users
  /users/:userID/segments/report:
    get:
      consumes:
      - application/json
      description: Returns link to a csv with user segments report
      operationId: getUsersSegmentsReport
      parameters:
      - description: user ID
        example: "1"
        in: path
        name: userID
        required: true
        type: string
      - description: month
        example: "8"
        in: query
        name: month
        required: true
        type: string
      - description: year
        example: "2023"
        in: query
        name: year
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/v1.Response'
            - properties:
                data:
                  $ref: '#/definitions/v1.ReportResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.Response'
      summary: Get users segments report
      tags:
      - users
swagger: "2.0"
